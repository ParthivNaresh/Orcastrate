name: SonarQube Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # Call existing workflows to generate coverage
  unit-tests:
    uses: ./.github/workflows/test-unit.yml
    secrets: inherit

  integration-tests:
    uses: ./.github/workflows/test-integration.yml  
    secrets: inherit

  live-tests:
    uses: ./.github/workflows/test-live.yml
    secrets: inherit

  sonarqube:
    name: "SonarQube Analysis"
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, live-tests]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Download unit test coverage
      uses: actions/download-artifact@v4
      with:
        name: unit-tests-coverage
        path: ./

    - name: Download integration test coverage
      uses: actions/download-artifact@v4
      with:
        name: integration-tests-coverage
        path: ./

    - name: Download live test coverage
      uses: actions/download-artifact@v4
      with:
        name: live-tests-coverage
        path: ./

    - name: List coverage files
      run: |
        echo "Available coverage files:"
        find . -name "*.xml" -o -name "htmlcov*" | sort
        echo "File sizes:"
        du -h *.xml 2>/dev/null || echo "No XML files found"

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate
      uses: sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}