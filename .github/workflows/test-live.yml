name: Live Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_call:

env:
  PYTHON_VERSION: '3.11'

jobs:
  live-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Just
      uses: extractions/setup-just@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: just install

    - name: Verify Terraform installation
      run: |
        terraform version
        echo "Terraform successfully installed and accessible"

    - name: Set environment variables
      run: |
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD || 'postgres' }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY || 'test-key' }}" >> $GITHUB_ENV
        echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY || 'test-key' }}" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Start LocalStack and services
      run: just docker-start docker

    - name: Wait for services to be ready
      run: |
        timeout 60s bash -c 'until curl -s http://localhost:4566/_localstack/health; do sleep 2; done'

    - name: Run live integration tests
      run: just test-live ci

    - name: Show infrastructure logs on failure
      if: failure()
      run: |
        echo "=== LocalStack logs ==="
        docker logs orcastrate-localstack || true
        echo "=== Test coordinator logs ==="
        docker logs orcastrate-test-coordinator || true
        echo "=== Infrastructure status ==="
        docker compose -f docker-compose.test.yml ps || true

    - name: Stop Docker services
      if: always()
      run: just docker-stop